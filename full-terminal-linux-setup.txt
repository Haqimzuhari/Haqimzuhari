1. Update & Upgrade
	$ sudo apt update
	$ sudo apt upgrade



2. Install LAMP Stack

	1. Install Apache2
		$ sudo apt install apache2


	2. Install Curl
		$ sudo apt install curl


	3. Install Mysql
		$ sudo apt install mysql-server
		$ sudo mysql_secure_installation
		validate password: y
		password strength: 2
		change password/use this password: y
		answer y for the rest setup
        sudo mysql
        ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';
        FLUSH PRIVILEGES;
        exit
	
	
	4. Install PHP
		$ sudo apt install php libapache2-mod--php php-mysql php-mbstring php-fileinfo php-bcmath php-dom php-xml



3. Set index.php as priorities in apache
	$ sudo nano /etc/apache2/mods-enabled/dir.conf
	<IfModule mod_dir.c>
		DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm
	</IfModule>



4. Install Nodejs
	$ curl -fsSL https://deb.nodesource.com/setup_14.x | sudo -E bash -
	$ sudo apt-get install -y nodejs



5. Install Composer
	$ php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
	$ php -r "if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
	$ php composer-setup.php
	$ php -r "unlink('composer-setup.php');"
	$ sudo mv composer.phar /usr/local/bin/composer
	$ composer -v
	
	
	
6. Install Laravel
	$ composer global require laravel/installer
	$ echo 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"' >> ~/.bashrc
	$ source ~/.bashrc
	$ laravel -v
	
	
	
7. Install Git
	$ sudo add-apt-repository ppa:git-core/ppa
	$ sudo apt update
	$ sudo apt install git
	
	
	
8. Create virtual host
	$ cd /var/www
	$ sudo mkdir domain.com
	$ sudo chown -R $USER:$USER domain.com
	$ sudo chmod -R 777 domain.com
	$ cd /etc/apache2/site-available
	$ sudo cp 000-default.conf domain.com.conf
	$ sudo nano domain.com.conf
	Change <VirtualHost *:80> port if needed
	Add ServerName under ServerAdmin: ServerName domain.com
	Add ServerAlias under ServerName: ServerAlias www.domain.com
	DocumentRoot /var/www/domain.com  or /var/www/domain.com/public for Laravel project
	ctrl+x then y then enter to exit nano
	$ sudo a2ensite domain.com.conf
	$ sudo a2dissite 000-default.conf
	$ sudo apache2ctl configtest
	$ sudo systemctl restart apache2



9. Enable mod_rewrite for .htaccess
	$ sudo a2enmod rewrite
	$ sudo nano /etc/apache2/sites-available/domain.com.conf
	Add
		<Directory /var/www/html>
			Options Indexes FollowSymLinks MultiViews
			AllowOverride All
			Require all granted
		</Directory>
	inside <VirtualHost></VirtualHost>
	$ sudo systemctl restart apache2
	
	
10. Add domain.com into Hosts file 
	$ cd /etc/apache2
	$ sudo nano hosts
	Add 127.0.0.1	domain.com
	This domain.com can be write in url and only work on local machine only. For production, need to purchase
	actual domain name and bind it to the IP using DNS or something. That can be setup on domain website.
	
	
	
11. Create database user and name
	$ mysql -u root -p
	$ <password>
	mysql> CREATE USER 'user'@'localhost' IDENTIFIED BY 'password';
	mysql> GRANT ALL PRIVILEGES ON * . * TO 'user'@'localhost';
	mysql> FLUSH PRIVILEGES;
	mysql> exit
	$ mysql -u user -p
	$ <password>
	mysql> CREATE DATABASE database_name
	mysql> exit
	
	
	
12. Download source file from github into virtual host root directory
	$ wget <github public repo link> !!! NEED PUT REPO ON PUBLIC MODE FOR DOWNLOAD PURPOSE !!!
	$ mv  -v ~/Downloads/repo/* /var/www/domain.com
	
	
	
13. Setup project (Laravel)
	$ cd /var/www/domain.com
	$ ls -a (to check all file and folder including hidden files are correct)
	$ composer install
	$ sudo npm install
	$ sudo npm prod
	$ sudo cp .env.example .env
	$ sudo nano .env (modify .env suite with current environment and database credential)
	$ php artisan key:generate
	$ php artisan migrate:fresh --seed
